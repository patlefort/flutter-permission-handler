<?xml version="1.0" encoding="utf-8"?>
<article xmlns="http://docbook.org/ns/docbook" version="5.1" xml:lang="en">
	<title>netns-helper manual</title>
	
	<refentry xml:id="netns-helper">
		<info>
			<author>
				<personname><firstname>Patrick</firstname><surname>Northon</surname></personname>
				<contrib>Developer of netns-helper.</contrib>
			</author>
			<productname>netns-helper</productname>
			<!--<productnumber>1.0</productnumber>-->
		</info>
		
		<refmeta>
			<refentrytitle>netns-helper</refentrytitle>
			<manvolnum>1</manvolnum>
		</refmeta>
		
		<refmiscinfo source="netns-helper" />
		
		<refnamediv>
			<refname>netns-helper</refname>
			<refpurpose>command to control namespaces</refpurpose>
		</refnamediv>
		
		<refsynopsisdiv>
			<cmdsynopsis>
				<command>netns-helper</command>
				<arg choice="opt">--now</arg>
				<arg choice="opt">--overwrite</arg>
				<arg choice="opt">--parent_if <replaceable>interface</replaceable></arg>
				<arg choice="opt">--mac <replaceable>mac address</replaceable></arg>
				<arg choice="opt">--macvlan_mode <replaceable>mode</replaceable></arg>
				<arg choice="opt">--privacy_ext <replaceable>value</replaceable></arg>
				<arg choice="opt">--ipaddr4 <replaceable>address</replaceable></arg>
				<arg choice="opt">--ipaddr6 <replaceable>address</replaceable></arg>
				<arg choice="opt">--ipaddr4_peer <replaceable>address</replaceable></arg>
				<arg choice="opt">--ipaddr6_peer <replaceable>address</replaceable></arg>
				<arg choice="opt">--default_gateway4 <replaceable>address</replaceable></arg>
				<arg choice="opt">--default_gateway6 <replaceable>address</replaceable></arg>
				<arg choice="opt">--gateway_metric <replaceable>value</replaceable></arg>
				<arg choice="opt">--bridge_interface <replaceable>interface</replaceable></arg>
				
				<group choice="req">
					<arg>enable <replaceable>namespace</replaceable> <optional><replaceable>list of features</replaceable></optional></arg>
					<arg>disable <replaceable>namespace</replaceable> <optional><replaceable>list of features</replaceable></optional></arg>
					<arg>purge <replaceable>namespace</replaceable></arg>
					<arg>add-service <replaceable>service</replaceable> <replaceable>namespace</replaceable></arg>
					<arg>remove-service <replaceable>service</replaceable></arg>
					<arg>status <optional><replaceable>namespace</replaceable></optional> <optional><replaceable>list of features</replaceable></optional></arg>
					<arg>start <optional><replaceable>namespace</replaceable></optional> <optional><replaceable>list of features</replaceable></optional></arg>
					<arg>restart <optional><replaceable>namespace</replaceable></optional> <optional><replaceable>list of features</replaceable></optional></arg>
					<arg>stop <optional><replaceable>namespace</replaceable></optional> <optional><replaceable>list of features</replaceable></optional></arg>
					<arg>addr <optional><replaceable>namespace</replaceable></optional></arg>
					<arg>route <optional><replaceable>namespace</replaceable></optional></arg>
					<arg>ruleset <optional><replaceable>namespace</replaceable></optional></arg>
					<arg>exec <optional><replaceable>namespace</replaceable></optional></arg>
					<arg>help</arg>
				</group>
			</cmdsynopsis>
		</refsynopsisdiv>
		
		<refsection>
			<title>Description</title>
			<para>The <command>netns-helper</command> command control services related to network namespaces managed by netns-helper.</para>
		</refsection>
			
		<refsection>
			<title>Switches</title>
			
			<para>
				Some of these switches map one-to-one with config file variables.
			</para>
			
			<variablelist>
				<varlistentry>
					<term><option>--now</option></term>
					<listitem><para>Start, restart or stop services now.</para></listitem>
				</varlistentry>
				
				<varlistentry>
					<term><option>--overwrite</option></term>
					<listitem><para>Overwrite config with new config if applicable to feature.</para></listitem>
				</varlistentry>
				
				<varlistentry>
					<term><option>--parent_if</option> <replaceable>interface</replaceable></term>
					<listitem><para>Parent interface for macvlan.</para></listitem>
				</varlistentry>
				
				<varlistentry>
					<term><option>--mac</option> <replaceable>mac address</replaceable></term>
					<listitem><para>MAC address of macvlan interface.</para></listitem>
				</varlistentry>
				
				<varlistentry>
					<term><option>--macvlan_mode</option> <replaceable>mode</replaceable></term>
					<listitem><para>macvlan mode (bridge, vepa, private).</para></listitem>
				</varlistentry>
				
				<varlistentry>
					<term><option>--privacy_ext</option> <replaceable>value</replaceable></term>
					<listitem><para>Privacy extensions (0, 1 or 2, see sysctl use_tempaddr).</para></listitem>
				</varlistentry>
				
				<varlistentry>
					<term><option>--ipaddr4</option> <replaceable>address</replaceable></term>
					<listitem><para>IPv4 address of interface.</para></listitem>
				</varlistentry>
				
				<varlistentry>
					<term><option>--ipaddr6</option> <replaceable>address</replaceable></term>
					<listitem><para>IPv6 address of interface.</para></listitem>
				</varlistentry>
				
				<varlistentry>
					<term><option>--ipaddr4_peer</option> <replaceable>address</replaceable></term>
					<listitem><para>IPv4 address of peer interface.</para></listitem>
				</varlistentry>
				
				<varlistentry>
					<term><option>--ipaddr6_peer</option> <replaceable>address</replaceable></term>
					<listitem><para>IPv6 address of peer interface.</para></listitem>
				</varlistentry>
				
				<varlistentry>
					<term><option>--default_gateway4</option> <replaceable>address</replaceable></term>
					<listitem><para>IPv4 default gateway.</para></listitem>
				</varlistentry>
				
				<varlistentry>
					<term><option>--default_gateway6</option> <replaceable>address</replaceable></term>
					<listitem><para>IPv6 default gateway.</para></listitem>
				</varlistentry>
				
				<varlistentry>
					<term><option>--gateway_metric</option> <replaceable>value</replaceable></term>
					<listitem><para>Gateway metric.</para></listitem>
				</varlistentry>
				
				<varlistentry>
					<term><option>--bridge_interface</option> <replaceable>interface</replaceable></term>
					<listitem><para>Bridge interface to add an interface to.</para></listitem>
				</varlistentry>
			</variablelist>
		</refsection>
		
		<refsection>
			<title>Commands</title>
			
			<variablelist>
				<varlistentry>
					<term><command>enable</command> <replaceable>namespace</replaceable> <optional><replaceable>list of features</replaceable></optional></term>
					<listitem><para>
						Enable a namespace. Features are a whitespace separated list of features to enable for the namespace.
					</para></listitem>
				</varlistentry>
				
				<varlistentry>
					<term><command>disable</command> <replaceable>namespace</replaceable> <optional><replaceable>list of features</replaceable></optional></term>
					<listitem><para>
						Disable a namespace. If a list of features is given, only the given features are disabled. Service units that are part of the 
						network namespace (added with command <command>add-service</command>) will not start while the namespace target unit is disabled.
					</para></listitem>
				</varlistentry>
				
				<varlistentry>
					<term><command>purge</command> <replaceable>namespace</replaceable></term>
					<listitem><para>
						Disable a namespace and all its features.
					</para></listitem>
				</varlistentry>
				
				<varlistentry>
					<term><command>add-service</command> <replaceable>service</replaceable> <replaceable>namespace</replaceable></term>
					<listitem><para>
						Put a service into a network namespace. This command will create a file in `/etc/systemd/system/<replaceable>service</replaceable>.d/netns-helper.conf`. 
						The service will only start if the network namespace target unit is activated.
					</para></listitem>
				</varlistentry>
				
				<varlistentry>
					<term><command>remove-service</command> <replaceable>service</replaceable></term>
					<listitem><para>
						Remove service from a network namespace.
					</para></listitem>
				</varlistentry>
				
				<varlistentry>
					<term><command>status</command> <optional><replaceable>namespace</replaceable></optional> <optional><replaceable>list of features</replaceable></optional></term>
					<listitem><para>
						Show status of namespace services. Leave <optional><replaceable>namespace</replaceable></optional> empty to show status for all namespaces.
					</para></listitem>
				</varlistentry>
				
				<varlistentry>
					<term><command>start</command> | <command>restart</command> | <command>stop</command> <optional><replaceable>namespace</replaceable></optional> <optional><replaceable>list of features</replaceable></optional></term>
					<listitem><para>
						Start/restart/stop network namespace target or features. Restarting or stopping a target namespace will also affect services that are added to the namespace. Omitting the namespace will start/stop/restart all configured namespaces.
					</para></listitem>
				</varlistentry>
				
				<varlistentry>
					<term><command>addr</command> <optional><replaceable>namespace</replaceable></optional></term>
					<listitem><para>
						Show result of running <command>ip addr</command> inside the network namespace. Omit the namespace to display for all namespaces. Offered for convenience.
					</para></listitem>
				</varlistentry>
				
				<varlistentry>
					<term><command>route</command> <optional><replaceable>namespace</replaceable></optional></term>
					<listitem><para>
						Show result of running <command>ip route</command> and <command>ip -6 route</command> inside the network namespace. Omit the namespace to display for all namespaces. Offered for convenience.
					</para></listitem>
				</varlistentry>
				
				<varlistentry>
					<term><command>ruleset</command> <optional><replaceable>namespace</replaceable></optional></term>
					<listitem><para>
						Show result of running <command>nft list ruleset</command> inside the network namespace. Omit the namespace to display for all namespaces. Offered for convenience.
					</para></listitem>
				</varlistentry>
				
				<varlistentry>
					<term><command>exec</command> <optional><replaceable>namespace</replaceable></optional> -- <replaceable>command</replaceable></term>
					<listitem><para>
						Execute command inside the network namespace. Omit the namespace execute on all namespaces.
					</para></listitem>
				</varlistentry>
			</variablelist>
		</refsection>

		<refsection>
			<title>Features</title>

			<variablelist>
				<varlistentry>
					<term><constant>bridged</constant></term>
					<listitem><para>
						Create a veth pair inside the network namespace and add it to a bridge configured in 
						`/etc/netns-helper/ns/<replaceable>namespace</replaceable>-bridged.conf`. See 
						<citerefentry><refentrytitle>netns-helper-config</refentrytitle><manvolnum>1</manvolnum></citerefentry> for configuration.
					</para></listitem>
				</varlistentry>

				<varlistentry>
					<term><constant>macvlan</constant></term>
					<listitem><para>
						Create a macvlan interface inside the network namespace, attached to an interface on host defined in 
						`/etc/netns-helper/ns/<replaceable>namespace</replaceable>-macvlan.conf`. See 
						<citerefentry><refentrytitle>netns-helper-config</refentrytitle><manvolnum>1</manvolnum></citerefentry> for configuration.
					</para></listitem>
				</varlistentry>

				<varlistentry>
					<term><constant>nat</constant></term>
					<listitem><para>
						Create a veth pair inside the network namespace and use NAT to have access to the outside network from inside the namespace.
						Configured with `/etc/netns-helper/ns/<replaceable>namespace</replaceable>-nat.conf`. See 
						<citerefentry><refentrytitle>netns-helper-config</refentrytitle><manvolnum>1</manvolnum></citerefentry> for configuration.
					</para></listitem>
				</varlistentry>

				<varlistentry>
					<term><constant>dhcp</constant></term>
					<listitem><para>
						Run dhclient in IPv4 mode inside network namespace. Note that dhclient (ISC DHCP) has entered end-of-life, it would be preferable 
						to switch to <constant>dhcpcd</constant>.
					</para></listitem>
				</varlistentry>

				<varlistentry>
					<term><constant>dhcp6</constant></term>
					<listitem><para>
						Run dhclient in IPv6 mode inside network namespace. Note that dhclient (ISC DHCP) has entered end-of-life, it would be preferable 
						to switch to <constant>dhcpcd</constant>.
					</para></listitem>
				</varlistentry>

				<varlistentry>
					<term><constant>dnsmasq</constant></term>
					<listitem><para>
						Use dnsmasq as DNS cache. Configured with `/etc/netns-helper/ns/<replaceable>namespace</replaceable>-dnsmasq.conf`.
						See <citerefentry><refentrytitle>dnsmasq</refentrytitle><manvolnum>8</manvolnum></citerefentry> for configuration.
					</para></listitem>
				</varlistentry>

				<varlistentry>
					<term><constant>dhcpcd</constant></term>
					<listitem><para>
						Use dhcpcd as dhcp client to configure interfaces. Configured with `/etc/netns-helper/ns/<replaceable>namespace</replaceable>-dhcpcd.conf`.
						It shouldn't be used along side dhcp or dhcp6 feature. It will also not work with systemd-resolvconf. dhcpcd will attempt to use systemd-resolvconf
						if it exists. To use it along side <constant>dnsmasq</constant> as the DNS cache, install openresolv.
						See <citerefentry><refentrytitle>dhcpcd</refentrytitle><manvolnum>8</manvolnum></citerefentry> for configuration.
					</para></listitem>
				</varlistentry>
			</variablelist>
		</refsection>
		
		<refsection>
			<title>Example</title>
			
			<example>
				<title>Run transmission-daemon inside a network namespace named `torrents`</title>
				<programlisting>
sudo netns-helper enable torrents macvlan dhcp --parent_if <replaceable>interface</replaceable> --now
sudo netns-helper add-service transmission-daemon torrents --now
				</programlisting>
				
				<para>
					transmission-daemon will then run inside the network namespace `torrents` with a macvlan interface configured via dhcp. It will 
					basically run with its own MAC address and IP address like a separate machine on your network, with the exception of some macvlan 
					limitations. You can enable DHCPv6 with <command>sudo netns-helper enable torrents dhcp6 --now</command>.
				</para>
				
				<important><para>
					Read the DNS section in <citerefentry><refentrytitle>netns-helper-config</refentrytitle><manvolnum>1</manvolnum></citerefentry> 
					to make sure name resolution is working properly.
				</para></important>
			</example>
		</refsection>
		
		<refsection>
			<title>See Also</title>
			
			<para>
				<citerefentry><refentrytitle>netns-helper-config</refentrytitle><manvolnum>1</manvolnum></citerefentry>, 
			</para>
		</refsection>
		
	</refentry>
	
	<refentry xml:id="netns-helper-config">
		<info>
			<author>
				<personname><firstname>Patrick</firstname><surname>Northon</surname></personname>
				<contrib>Developer of netns-helper.</contrib>
			</author>
			<productname>netns-helper</productname>
			<!--<productnumber>1.0</productnumber>-->
		</info>
		
		<refmeta>
			<refentrytitle>netns-helper-config</refentrytitle>
			<manvolnum>5</manvolnum>
		</refmeta>
		
		<refmiscinfo source="netns-helper-config" />
		
		<refnamediv>
			<refname>netns-helper-config</refname>
			<refpurpose>netns-helper configuration</refpurpose>
		</refnamediv>
		
		<refsection>
			<title>Configuration</title>
			
			<para>
				Namespaces with netns-helper are configured in `/etc/netns-helper/ns`.
			</para>
			
			<variablelist>
				<varlistentry>
					<term><command><replaceable>namespace</replaceable>-postcreate</command></term>
					<listitem>
						<para>Script executed after network namespace has been created. This script is executed inside the network namespace. Must be executable.</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><replaceable>namespace</replaceable>-macvlan.conf</term>
					<listitem>
						<para>Configuration for macvlan.</para>
						<programlisting>
# Parent interface on host for macvlan interface.
parent_if=

# [Optional] macvlan operation mode. Defaults to bridge.
#macvlan_mode=

# [Optional] MAC address for macvlan interface. Leave empty to let iproute2 generate one.
#mac=

# [Optional] Static IPv4 address.
#ipaddr4=

# [Optional] Default IPv4 gateway.
#default_gateway4=

# [Optional] Static IPv6 address.
#ipaddr6=

# [Optional] Default IPv6 gateway.
#default_gateway6=

# [Optional] Gateway metric.
#gateway_metric=

# [Optional] Privacy extensions for IPv6. 0, 1 or 2.
# See https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt `use_tempaddr`.
#privacy_ext=
							</programlisting>
					</listitem>
				</varlistentry>
				
				<varlistentry>
					<term><replaceable>namespace</replaceable>-nat.conf</term>
					<listitem>
						<para>Configuration for nat.</para>
						<programlisting>
# [Otional] Parent interface on host for NAT forwarding.
#parent_if=

# [Optional] IPv4 address for veth interface.
#ipaddr4=

# [Optional] IPv4 address for veth peer interface.
#ipaddr4_peer=

# [Optional] Default IPv4 gateway.
#default_gateway4=

# [Optional] IPv6 address for veth interface.
#ipaddr6=

# [Optional] IPv6 address for veth peer interface.
#ipaddr6_peer=

# [Optional] Default IPv6 gateway.
#default_gateway6=

# [Optional] Gateway metric.
#gateway_metric=
							</programlisting>
					</listitem>
				</varlistentry>
				
				<varlistentry>
					<term><replaceable>namespace</replaceable>-bridged.conf</term>
					<listitem>
						<para>Configuration for bridged.</para>
						<programlisting>
# Bridge interface to add an interface to.
bridge_interface=

# [Optional] MAC address for veth peer interface. Leave empty to let iproute2 generate one.
#mac=

# [Optional] IPv4 address for veth peer interface.
#ipaddr4_peer=

# [Optional] Default IPv4 gateway.
#default_gateway4=

# [Optional] IPv6 address for veth peer interface.
#ipaddr6_peer=

# [Optional] Default IPv6 gateway.
#default_gateway6=

# [Optional] Gateway metric.
#gateway_metric=
							</programlisting>
					</listitem>
				</varlistentry>
				
				<varlistentry>
					<term><command><replaceable>namespace</replaceable>-macvlan-preup</command></term>
					<para>Executed if present and executable before a macvlan is set as up. The first argument passed will be the name of the macvlan interface.</para>
				</varlistentry>
				
				<varlistentry>
					<term><command><replaceable>namespace</replaceable>-macvlan-postup</command></term>
					<para>Executed if present and executable after a macvlan is set as up and configured. The first argument passed will be the name of the macvlan interface.</para>
				</varlistentry>
				
				<varlistentry>
					<term><command><replaceable>namespace</replaceable>-macvlan-down</command></term>
					<para>Executed if present and executable just before a macvlan interface is going to be deleted. The first argument passed will be the name of the macvlan interface.</para>
				</varlistentry>
				
				<varlistentry>
					<term><command><replaceable>namespace</replaceable>-nat-preup</command></term>
					<para>Executed if present and executable before a veth interface is set as up for nat feature. The first argument passed will be the name of the veth peer interface.</para>
				</varlistentry>
				
				<varlistentry>
					<term><command><replaceable>namespace</replaceable>-nat-postup</command></term>
					<para>Executed if present and executable after a veth interface is set as up and configured for nat feature. The first argument passed will be the name of the veth peer interface.</para>
				</varlistentry>
				
				<varlistentry>
					<term><command><replaceable>namespace</replaceable>-nat-down</command></term>
					<para>Executed if present and executable just before a veth interface interface is going to be deleted for nat feature. The first argument passed will be the name of the veth peer interface.</para>
				</varlistentry>
				
				<varlistentry>
					<term><command><replaceable>namespace</replaceable>-bridged-preup</command></term>
					<para>Executed if present and executable before a veth interface is set as up for bridged feature. The first argument passed will be the name of the veth peer interface.</para>
				</varlistentry>
				
				<varlistentry>
					<term><command><replaceable>namespace</replaceable>-bridged-postup</command></term>
					<para>Executed if present and executable after a veth interface is set as up and configured for bridged feature. The first argument passed will be the name of the veth peer interface.</para>
				</varlistentry>
				
				<varlistentry>
					<term><command><replaceable>namespace</replaceable>-bridged-down</command></term>
					<para>Executed if present and executable just before a veth interface interface is going to be deleted for bridged feature. The first argument passed will be the name of the veth peer interface.</para>
				</varlistentry>
				
				<varlistentry>
					<term><replaceable>namespace</replaceable>-dhclient.conf</term>
					<para>dhclient configuration file passed with the <option>-cf</option> switch for DHCPv4.</para>
				</varlistentry>
				
				<varlistentry>
					<term><replaceable>namespace</replaceable>-dhclient6.conf</term>
					<para>dhclient configuration file passed with the <option>-cf</option> switch for DHCPv6.</para>
				</varlistentry>
				
				<varlistentry>
					<term><command><replaceable>namespace</replaceable>-postup</command></term>
					<listitem><para>
						Script executed after all other netns-helper services have started for a network namespace. The script run inside the network 
						namespace. Must be executable.
					</para></listitem>
				</varlistentry>
			</variablelist>
		</refsection>
		
		<refsection>
			<title>DNS</title>
			
			<para>In order to make name resolution work properly inside the network namespace, some precautions must be taken:</para>
			
			<para>
				<constant>dhcp</constant> as well as <constant>dhcpcd</constant> might overwrite your host's resolv.conf. To avoid this you should create a file 
				`/etc/netns/<replaceable>namespace</replaceable>/resolv.conf`. If you are using systemd-resolved and your `/etc/resolv.conf` is a symlink, you will have to 
				remove it, recreate it as a regular file and explicitly tell your network manager of your host to use systemd-resolved. If you are using NetworkManager, you 
				can add the following file into `/etc/NetworkManager/conf.d/00-dns-resolved.conf`:
			</para>
			
			<programlisting>
[main]
dns=systemd-resolved
			</programlisting>
			
			<para>
				Then make sure your `/etc/nsswitch.conf` contain `resolve` in he `hosts:` line. Remove `dns` if present. Also make sure that you have 
				installed `nss-resolve` on your system.
			</para>
			
			<para>
				Make sure your network namespace is not using your host's systemd-resolved. If your `/etc/nsswitch.conf` contains `resolve` or 
				`resolve [!UNAVAIL=return]`, it will be used via dbus.
			</para>
			
			<programlisting>
sudo cp /etc/nsswitch.conf /etc/netns/<replaceable>namespace</replaceable>/nsswitch.conf
			</programlisting>
			
			<para>Then modify `/etc/netns/<replaceable>namespace</replaceable>/nsswitch.conf` to remove `resolve` and put `dns` of not already present.</para>
		</refsection>
		
		<refsection>
			<title>See Also</title>
			
			<para>
				<citerefentry><refentrytitle>netns-helper</refentrytitle><manvolnum>1</manvolnum></citerefentry>, 
			</para>
		</refsection>
	</refentry>
	
</article>
