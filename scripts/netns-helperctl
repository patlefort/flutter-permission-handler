#!/bin/bash

set -euo pipefail
shopt -s inherit_errexit

NS=$1
CMD=$2

case $CMD in
	netns)
		
		case $3 in
			create)
				echo "Creating network namespace $NS."

				# Setup network namespace and lo interface.
				# It is meant to be run inside an anonymous network namespace of a systemd service.
				
				ip link set lo up
				
				flock --no-fork -- /var/run/netns.lock ip netns add $NS
				umount /var/run/netns/$NS
				mount --bind /proc/self/ns/net /var/run/netns/$NS

				;;

			delete)
				echo "Deleting network namespace $NS."

				ip netns delete $NS

				;;
			*)
				>&2 echo "Wrong command."
				exit 1
				;;
		esac

		;;

	macvlan)

		case $3 in
			create)
				# Read config
				if [[ ! -f /etc/netns-helper/ns/$NS-macvlan.conf ]]; then
					>&2 echo "File /etc/netns-helper/ns/$NS-macvlan.conf not found, exiting."
					exit 1
				fi
				
				source /etc/netns-helper/ns/$NS-macvlan.conf
				
				echo "Creating macvlan interface in $NS with $PARENT_IF."

				# Setup macvlan interface and link it to parent interface.
				ip link add nm_$NS link $PARENT_IF type macvlan mode bridge || \
					{
						>&2 echo "Failed to create macvlan interface."
						exit 1
					}
				
				ip link set nm_$NS netns $NS || \
					{
						>&2 echo "Failed to add macvlan to network namespace."
						ip link delete nm_$NS
						exit 1
					}
				
				macvlan_failed()
				{
					# Delete interface on failure
					ip netns exec $NS ip link delete nm_$NS
				}
					
				trap 'macvlan_failed' ERR
				
				if [[ -v MAC && ! -z "$MAC" ]]; then
					echo "MAC address: $MAC"
					ip netns exec $NS ip link set nm_$NS address $MAC
				fi
				
				# Privacy extensions
				if [[ -v PRIVACY_EXT && ! -z "$PRIVACY_EXT" ]]; then
					sysctl -w net.ipv6.conf.nm_$NS.use_tempaddr=$PRIVACY_EXT
				fi
				
				# Run preup script
				if [[ -x /etc/netns-helper/ns/$NS-macvlan-preup ]]; then
					ip netns exec $NS /etc/netns-helper/ns/$NS-preup nm_$NS
				fi
				
				ip netns exec $NS ip link set nm_$NS up
				
				# Configure macvlan interface
				if [[ -v IPADDR4 && ! -z "$IPADDR4" ]]; then
					ip netns exec $NS ip address add $IPADDR4 dev nm_$NS
				fi
				
				if [[ -v DEFAULT_GATEWAY4 && ! -z "$DEFAULT_GATEWAY4" ]]; then
					ip route add default via $DEFAULT_GATEWAY4 dev nm_$NS onlink
				fi
				
				if [[ -v IPADDR6 && ! -z "$IPADDR6" ]]; then
					ip netns exec $NS ip -6 address add $IPADDR6 dev nm_$NS
				fi
				
				if [[ -v DEFAULT_GATEWAY6 && ! -z "$DEFAULT_GATEWAY6" ]]; then
					ip -6 route add default via $DEFAULT_GATEWAY6 dev nm_$NS onlink
				fi
				
				echo "Macvlan interface:"
				ip netns exec $NS ip link show nm_$NS

				mkdir -p /run/netmachine/$NS
				
				# Run postup script
				if [[ -x /etc/netns-helper/ns/$NS-macvlan-postup ]]; then
					ip netns exec $NS /etc/netns-helper/ns/$NS-postup nm_$NS
				fi

				;;
			delete)
				echo "Deleting macvlan interface in namespace $NS."
				ip netns exec $NS ip link delete nm_$NS

				;;
			*)
				>&2 echo "Wrong command."
				exit 1
				;;
		esac

		;;
		
	postup)
		
		if [[ -x /etc/netns-helper/ns/$NS-postup ]]; then
			/etc/netns-helper/ns/$NS-postup
		fi
		
		;;
		
	*)
		>&2 echo "Wrong command."
		exit 1
		;;
esac
